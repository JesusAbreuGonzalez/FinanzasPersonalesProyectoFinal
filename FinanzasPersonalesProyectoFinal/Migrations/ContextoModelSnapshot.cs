// <auto-generated />
using System;
using FinanzasPersonalesProyectoFinal.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FinanzasPersonalesProyectoFinal.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("FinanzasPersonalesProyectoFinal.Entidades.Categorias", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreCategoria")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CategoriaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            CategoriaId = 1,
                            FechaCreacion = new DateTime(2021, 3, 27, 16, 12, 43, 646, DateTimeKind.Local).AddTicks(1910),
                            NombreCategoria = "Alimentación"
                        },
                        new
                        {
                            CategoriaId = 2,
                            FechaCreacion = new DateTime(2021, 3, 27, 16, 12, 43, 648, DateTimeKind.Local).AddTicks(2394),
                            NombreCategoria = "Educación"
                        },
                        new
                        {
                            CategoriaId = 3,
                            FechaCreacion = new DateTime(2021, 3, 27, 16, 12, 43, 648, DateTimeKind.Local).AddTicks(2425),
                            NombreCategoria = "Entretenimiento"
                        },
                        new
                        {
                            CategoriaId = 4,
                            FechaCreacion = new DateTime(2021, 3, 27, 16, 12, 43, 648, DateTimeKind.Local).AddTicks(2428),
                            NombreCategoria = "Pagos"
                        },
                        new
                        {
                            CategoriaId = 5,
                            FechaCreacion = new DateTime(2021, 3, 27, 16, 12, 43, 648, DateTimeKind.Local).AddTicks(2430),
                            NombreCategoria = "Ropa"
                        },
                        new
                        {
                            CategoriaId = 6,
                            FechaCreacion = new DateTime(2021, 3, 27, 16, 12, 43, 648, DateTimeKind.Local).AddTicks(2432),
                            NombreCategoria = "Vivienda"
                        });
                });

            modelBuilder.Entity("FinanzasPersonalesProyectoFinal.Entidades.Gastos", b =>
                {
                    b.Property<int>("GastoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DescripcionGasto")
                        .HasColumnType("TEXT");

                    b.Property<int>("PresupuestoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GastoId");

                    b.HasIndex("PresupuestoId");

                    b.ToTable("Gastos");
                });

            modelBuilder.Entity("FinanzasPersonalesProyectoFinal.Entidades.GastosDetalle", b =>
                {
                    b.Property<int>("DetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaGasto")
                        .HasColumnType("TEXT");

                    b.Property<int>("GastoId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("MontoGasto")
                        .HasColumnType("REAL");

                    b.HasKey("DetalleId");

                    b.HasIndex("GastoId");

                    b.ToTable("GastosDetalle");
                });

            modelBuilder.Entity("FinanzasPersonalesProyectoFinal.Entidades.Ingresos", b =>
                {
                    b.Property<int>("IngresoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DescripcionIngreso")
                        .HasColumnType("TEXT");

                    b.Property<int>("PresupuestoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("IngresoId");

                    b.HasIndex("PresupuestoId");

                    b.ToTable("Ingresos");
                });

            modelBuilder.Entity("FinanzasPersonalesProyectoFinal.Entidades.IngresosDetalle", b =>
                {
                    b.Property<int>("DetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("TEXT");

                    b.Property<int>("IngresoId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("MontoIngreso")
                        .HasColumnType("REAL");

                    b.HasKey("DetalleId");

                    b.HasIndex("IngresoId");

                    b.ToTable("IngresosDetalle");
                });

            modelBuilder.Entity("FinanzasPersonalesProyectoFinal.Entidades.Permisos", b =>
                {
                    b.Property<int>("PermisoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.Property<int>("VecesAsignado")
                        .HasColumnType("INTEGER");

                    b.HasKey("PermisoId");

                    b.ToTable("Permisos");

                    b.HasData(
                        new
                        {
                            PermisoId = 1,
                            Descripcion = "Agrega o Modifica",
                            FechaCreacion = new DateTime(2021, 3, 27, 16, 12, 43, 649, DateTimeKind.Local).AddTicks(9306),
                            VecesAsignado = 0
                        },
                        new
                        {
                            PermisoId = 2,
                            Descripcion = "Consulta",
                            FechaCreacion = new DateTime(2021, 3, 27, 16, 12, 43, 650, DateTimeKind.Local).AddTicks(2109),
                            VecesAsignado = 0
                        },
                        new
                        {
                            PermisoId = 3,
                            Descripcion = "Elimina",
                            FechaCreacion = new DateTime(2021, 3, 27, 16, 12, 43, 650, DateTimeKind.Local).AddTicks(2118),
                            VecesAsignado = 0
                        });
                });

            modelBuilder.Entity("FinanzasPersonalesProyectoFinal.Entidades.Presupuestos", b =>
                {
                    b.Property<int>("PresupuestoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.Property<int>("MontoPresupuesto")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombrePresupuesto")
                        .HasColumnType("TEXT");

                    b.HasKey("PresupuestoId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Presupuestos");
                });

            modelBuilder.Entity("FinanzasPersonalesProyectoFinal.Entidades.Roles", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.Property<bool>("esActivo")
                        .HasColumnType("INTEGER");

                    b.HasKey("RolId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RolId = 1,
                            Descripcion = "Registrador",
                            FechaCreacion = new DateTime(2021, 3, 27, 16, 12, 43, 650, DateTimeKind.Local).AddTicks(7559),
                            esActivo = true
                        });
                });

            modelBuilder.Entity("FinanzasPersonalesProyectoFinal.Entidades.RolesDetalle", b =>
                {
                    b.Property<int>("RolDetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsAsignado")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PermisoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RolId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RolDetalleId");

                    b.HasIndex("PermisoId");

                    b.HasIndex("RolId");

                    b.ToTable("RolesDetalle");

                    b.HasData(
                        new
                        {
                            RolDetalleId = 1,
                            EsAsignado = true,
                            PermisoId = 1,
                            RolId = 1
                        });
                });

            modelBuilder.Entity("FinanzasPersonalesProyectoFinal.Entidades.Usuarios", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Alias")
                        .HasColumnType("TEXT");

                    b.Property<string>("Clave")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombres")
                        .HasColumnType("TEXT");

                    b.Property<int>("RolId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            UsuarioId = 1,
                            Activo = true,
                            Alias = "",
                            Clave = "4ee1d94f2cc476688105a776dcc6d36c32ad00aa68b901baeff71b115676f45d",
                            Email = "",
                            FechaIngreso = new DateTime(2021, 3, 27, 16, 12, 43, 651, DateTimeKind.Local).AddTicks(2840),
                            Nombres = "Username",
                            RolId = 0
                        });
                });

            modelBuilder.Entity("FinanzasPersonalesProyectoFinal.Entidades.Categorias", b =>
                {
                    b.HasOne("FinanzasPersonalesProyectoFinal.Entidades.Usuarios", null)
                        .WithMany("Categorias")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("FinanzasPersonalesProyectoFinal.Entidades.Gastos", b =>
                {
                    b.HasOne("FinanzasPersonalesProyectoFinal.Entidades.Presupuestos", null)
                        .WithMany("Gastos")
                        .HasForeignKey("PresupuestoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FinanzasPersonalesProyectoFinal.Entidades.GastosDetalle", b =>
                {
                    b.HasOne("FinanzasPersonalesProyectoFinal.Entidades.Gastos", null)
                        .WithMany("GastosDetalle")
                        .HasForeignKey("GastoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FinanzasPersonalesProyectoFinal.Entidades.Ingresos", b =>
                {
                    b.HasOne("FinanzasPersonalesProyectoFinal.Entidades.Presupuestos", null)
                        .WithMany("Ingresos")
                        .HasForeignKey("PresupuestoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FinanzasPersonalesProyectoFinal.Entidades.IngresosDetalle", b =>
                {
                    b.HasOne("FinanzasPersonalesProyectoFinal.Entidades.Ingresos", null)
                        .WithMany("IngresosDetalle")
                        .HasForeignKey("IngresoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FinanzasPersonalesProyectoFinal.Entidades.Presupuestos", b =>
                {
                    b.HasOne("FinanzasPersonalesProyectoFinal.Entidades.Categorias", null)
                        .WithMany("Presupuestos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FinanzasPersonalesProyectoFinal.Entidades.RolesDetalle", b =>
                {
                    b.HasOne("FinanzasPersonalesProyectoFinal.Entidades.Permisos", null)
                        .WithMany("RolesDetalle")
                        .HasForeignKey("PermisoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanzasPersonalesProyectoFinal.Entidades.Roles", null)
                        .WithMany("RolesDetalle")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FinanzasPersonalesProyectoFinal.Entidades.Categorias", b =>
                {
                    b.Navigation("Presupuestos");
                });

            modelBuilder.Entity("FinanzasPersonalesProyectoFinal.Entidades.Gastos", b =>
                {
                    b.Navigation("GastosDetalle");
                });

            modelBuilder.Entity("FinanzasPersonalesProyectoFinal.Entidades.Ingresos", b =>
                {
                    b.Navigation("IngresosDetalle");
                });

            modelBuilder.Entity("FinanzasPersonalesProyectoFinal.Entidades.Permisos", b =>
                {
                    b.Navigation("RolesDetalle");
                });

            modelBuilder.Entity("FinanzasPersonalesProyectoFinal.Entidades.Presupuestos", b =>
                {
                    b.Navigation("Gastos");

                    b.Navigation("Ingresos");
                });

            modelBuilder.Entity("FinanzasPersonalesProyectoFinal.Entidades.Roles", b =>
                {
                    b.Navigation("RolesDetalle");
                });

            modelBuilder.Entity("FinanzasPersonalesProyectoFinal.Entidades.Usuarios", b =>
                {
                    b.Navigation("Categorias");
                });
#pragma warning restore 612, 618
        }
    }
}
